---

# *** Main configuration file for the SMART-on-FHIR Installer ***

# To customize the SMART-on-FHIR stack, you can either edit the settings directly in
# this file or set up custom settings overrides (such as custom_settings.yml)

# The user account that will host the servers. If a user account of this name
# already exists on the system, the installer will not alter its credentials or
# authentication mechanism. If you need to set up actual password authentication,
# userpass needs to be a valid SHA-512 hash.
username: fhir
userpass: nopass
install_dir: "/home/{{username}}"

# Suppresses selective task execution (set this to true if you would like to
# force the playbook to always rebuild the servers and reload them)
force_rebuild: true

# By default Ansible will update the local copies of the servers code from
# the source repositories. Set this to "no" if you would rather not have the
# repositories updated on each run.
update_repositories: yes

# Settigs for Jetty and Oracle Java. You probably won't have to alter these
# unles you are switching to a different version of Jetty or Java
jetty_download_url: "http://central.maven.org/maven2/org/eclipse/jetty/jetty-runner/9.3.6.v20151106/jetty-runner-9.3.6.v20151106.jar"

# HSPC Repositories
hspc_repos_base: "https://bitbucket.org/hspconsortium"

# Database configuration
mysql_host: localhost
mysql_endpoint: "{{mysql_host}}:3306"
mysql_root_pass: password
mysql_user: fhir
mysql_pass: password
#mysql_privilage: "{{auth_server_database}}.*:ALL/{{sandbox_manager_database}}.*:ALL/*.*:ALL,GRANT"
mysql_privilage: "*.*:ALL,GRANT"

# Password for the Java keystore used by the authorization server (please change)
keystore_password: "changeme"

# When setting up SSL security for the various services, these settings will allow you to
# specify your own certificates instead of using self-signed certificates.
# See files/sample-certificates for the names of the certificate files expected by the script
use_custom_ssl_certificates: false
#custom_ssl_certificates_path: examples/certificates

# Controls whether HTTP requests on port 80 will be
# redirected to the server's base URLs
http_redirect: false

# Set this to either "open" or "secured" on the primary endpoint /data
fhir_server_security_mode: secured
# Set this to either "true" or "false" to allow an open endpoint at /open
fhir_server_allow_open_access: true

# General settings for the applications server
app_server_secure_http: false
app_server_host: "localhost"
app_server_port: 9090
fhir_starter_repo: "https://github.com/smart-on-fhir/fhir-starter.git"
cardiac_risk_repo: "https://github.com/smart-on-fhir/cardiac-risk-app.git"
bp_centiles_repo: "https://github.com/smart-on-fhir/bp-centiles-app.git"
growth_chart_repo: "https://github.com/smart-on-fhir/growth-chart-app.git"
fhir_demo_app_repo: "https://github.com/smart-on-fhir/fhir-demo-app.git"
fhir_starter_branch: "master"
cardiac_risk_branch: "master"
bp_centiles_branch: "master"
growth_chart_branch: "master"
fhir_demo_app_branch: "master"

# General settings for the sample patients set
sample_patients_repo: "https://github.com/smart-on-fhir/sample-patients.git"
sample_patients_branch: "master"

# choose how many sample patients to load in the server or set to 9999 for all of them
sample_patients_limit: 10
include_custom_patients: false

app_server_base: "{{
    'https' if app_server_secure_http else 'http'}}://{{app_server_host}}{{
    (':'+app_server_port|string) if app_server_port|int not in (80,443) else ''}}"

# Self-signed SSL certificates settings (if generating self-signed certificates)
default_ssl_country: US
default_ssl_province: MA
default_ssl_locality: Boston
default_ssl_organization: Example Company
default_ssl_division: support
default_ssl_email: support@example.com
app_server_ssl_country: "{{default_ssl_country}}"
app_server_ssl_province: "{{default_ssl_province}}"
app_server_ssl_locality: "{{default_ssl_locality}}"
app_server_ssl_organization: "{{default_ssl_organization}}"
app_server_ssl_division: "{{default_ssl_division}}"
app_server_ssl_email: "{{default_ssl_email}}"

# LDAP server configuration
ldap_server_host: "localhost"
ldap_server_base: "dc=example,dc=com"
ldap_server_uri: "ldap://{{ldap_server_host}}:389"
ldap_server_admin_password: "sample-password"
# Additional parameters for the sample patient generator
sample_patients_generator_params: ""

# API DSTU2 Server
# Promoted to global settings to it can be shared
api_dstu2_server_secure_http: false
api_dstu2_server_host: "localhost"
api_dstu2_server_port: 9080
api_dstu2_server_context: /
api_dstu2_server_name: "Local DSTU2 FHIR dev server"
api_dstu2_server_inferred_protocol: "{{'https' if api_dstu2_server_secure_http else 'http'}}"
api_dstu2_server_inferred_port: "{{(':'+api_dstu2_server_port|string) if api_dstu2_server_port|int not in (80,443) else ''}}"
api_dstu2_server_smart_sandbox: smartdstu2
api_dstu2_server_base_url: "{{api_dstu2_server_inferred_protocol}}://{{api_dstu2_server_host}}:{{api_dstu2_server_inferred_port}}{{api_dstu2_server_context}}"
api_dstu2_server_smart_sandbox_url: "{{api_dstu2_server_base_url}}{{api_dstu2_server_smart_sandbox}}"
api_dstu2_server_smart_sandbox_fhir_root_url: "{{api_dstu2_server_smart_sandbox_url}}/data"
api_dstu2_server_smart_sandbox_open_fhir_root_url: "{{api_dstu2_server_smart_sandbox_url}}/open"
# todo this needs to change
api_dstu2_server_base_url_persona: "{{api_dstu2_server_base_url}}"

# SandboxManager Server
# Promoted to global settings to it can be shared
sandbox_manager_server_secure_http: false
sandbox_manager_server_host: "localhost"
sandbox_manager_server_port: 9075
sandbox_manager_server_internal_port: 9005
sandbox_manager_server_context: /
sandbox_manager_server_name: "Sandbox Manager server"
sandbox_manager_server_inferred_protocol: "{{'https' if sandbox_manager_server_secure_http else 'http'}}"
sandbox_manager_server_inferred_port: "{{(':'+sandbox_manager_server_port|string) if sandbox_manager_server_port|int not in (80,443) else ''}}"
sandbox_manager_server_base_url: "{{sandbox_manager_server_inferred_protocol}}://{{sandbox_manager_server_host}}{{sandbox_manager_server_inferred_port}}"
sandbox_manager_server_url: "{{sandbox_manager_server_base_url}}{{sandbox_manager_server_context}}"

# Auth Server
# Promoted to global settings to it can be shared
auth_server_secure_http: false
#auth_server_host: "localhost"
auth_server_host: "auth.com"
auth_server_port: 9085
auth_server_internal_port: 9001
auth_server_context: /
auth_server_name: "Authorization Server"
auth_server_inferred_protocol: "{{'https' if auth_server_secure_http else 'http'}}"
auth_server_inferred_port: "{{(':'+auth_server_port|string) if auth_server_port|int not in (80,443) else ''}}"
auth_server_base_url: "{{auth_server_inferred_protocol}}://{{auth_server_host}}{{auth_server_inferred_port}}"
auth_server_url: "{{auth_server_base_url}}{{auth_server_context}}"
auth_server_client: client
auth_server_password: secret

# Auth Persona Server
# Promoted to global settings to it can be shared
auth_persona_server_secure_http: false
#auth_persona_server_host: "localhost"
auth_persona_server_host: "persona-auth.com"
auth_persona_server_port: 9086
auth_persona_server_internal_port: "{{auth_server_internal_port}}"
auth_persona_server_context: /
auth_persona_server_name: "Authorization Server"
auth_persona_server_inferred_protocol: "{{'https' if auth_persona_server_secure_http else 'http'}}"
auth_persona_server_inferred_port: "{{(':'+auth_persona_server_port|string) if auth_persona_server_port|int not in (80,443) else ''}}"
auth_persona_server_base_url: "{{auth_persona_server_inferred_protocol}}://{{auth_persona_server_host}}{{auth_persona_server_inferred_port}}"
auth_persona_server_url: "{{auth_persona_server_base_url}}{{auth_persona_server_context}}"
auth_persona_server_client: client
auth_persona_server_password: secret

# Maximu size of sample patient data files
max_upload_size: "5M"
