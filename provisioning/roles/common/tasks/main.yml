---
 - name: installer profile
   tags: [linux, smart-platform]
   template: src=.bash_profile.j2 dest={{installer_user_home}}/.bash_profile

 - name: check custom certificate preconditions
   tags: [linux, smart-platform]
   fail: msg="please define the path to the custom certificates that you would like to use"
   when: use_custom_ssl_certificates and (custom_ssl_certificates_path is not defined)

 - name: disable apt update on startup
   tags: [linux, smart-platform]
   service: name=apt-daily.service enabled=no

 - name: disable apt update timer
   tags: [linux, smart-platform]
   service: name=apt-daily.timer enabled=no

 - name: update aptitude cache
   tags: [linux, smart-platform]
   apt: update_cache=yes
   register: result
   until: result|succeeded
   retries: 10
   delay: 10

 - name: install prerequisite packages
   tags: [linux, smart-platform]
   environment:
     DEBIAN_FRONTEND: noninteractive
   apt: pkg={{item}} force=yes
   with_items:
          - acl
          - aptitude
          - curl
          - git
          - nginx
          - maven
          - mysql-server
          - openjdk-8-jdk
          - python-psycopg2
          - python-jinja2
          - python-httplib2
          - python-mysqldb
          - python-requests
          - python-pycurl

 - name: upgrade server packages
   tags: [linux, smart-platform]
   apt: upgrade=full

 - name: create group
   tags: [linux, smart-platform]
   group: name="{{username}}"

 - name: create user
   tags: [linux, smart-platform]
   user: name="{{username}}" password="{{userpass}}" update_password="on_create"
         group="{{username}}" groups=sudo
         shell=/bin/bash

 - name: download jetty-runner
   tags: [linux, smart-platform]
   become_user: "{{username}}"
   get_url:
           url={{jetty_download_url}}
           dest={{install_dir}}/jetty-runner.jar

 - name: config jetty-runner
   tags: [linux, smart-platform]
   copy: src=jetty.xml dest={{install_dir}}/jetty.xml

 - name: create ssl certificates directory
   tags: [linux, smart-platform]
   when: auth_server_secure_http or api_dstu2_server_secure_http or app_server_secure_http
   file: path=/etc/nginx/ssl state=directory owner=root group=root mode=0640

 - name: copy custom ssl certificates
   tags: [linux, smart-platform]
   when: (auth_server_secure_http or api_dstu2_server_secure_http or app_server_secure_http) and use_custom_ssl_certificates
   copy: src={{custom_ssl_certificates_path}}/
         dest=/etc/nginx/ssl
   notify:
         - restart nginx

 - name: add www-data user to ssl-cert group
   tags: [linux, smart-platform]
   when: (auth_server_secure_http or api_dstu2_server_secure_http or app_server_secure_http) and use_custom_ssl_certificates
   user: name=www-data groups=ssl-cert

 - name: list private key files
   tags: [linux, smart-platform]
   find:
     paths: "/etc/nginx/ssl"
     patterns: "*.key"
   register: keys

 - name: set private key permissions
   tags: [linux, smart-platform]
   when: (auth_server_secure_http or api_dstu2_server_secure_http or app_server_secure_http or sandbox_manager_server_secure_http) and use_custom_ssl_certificates
   file: path="{{item.path}}" group=ssl-cert mode=640
   with_items: "{{keys.files}}"

 - name: clear truststore
   tags: [linux, smart-platform]
   file: name={{install_dir}}/keystore state=absent

 - name: initialize truststore
   tags: [linux, smart-platform]
   become_user: "{{username}}"
   when: auth_server_secure_http or api_dstu2_server_secure_http or app_server_secure_http
   shell: /bin/echo -e "{{keystore_password}}\n{{keystore_password}}\n\n\n\n\n\n\nyes\n" | keytool
            -genkey -alias foo
            -keystore {{install_dir}}/keystore

 - name: configure nginx (api server)
   tags: [linux, smart-platform]
   template: src=upload.conf.j2 dest=/etc/nginx/conf.d/upload.conf owner=root group=root mode=0644
   notify:
     - restart nginx

 - name: Configure MySQL user
   tags: [linux, smart-platform]
   mysql_user: name={{mysql_user}} host={{mysql_host}} password={{mysql_pass}} priv={{mysql_privilage}} state=present

 - meta: flush_handlers
