---
 - name: checkout repository sandbox_manager_project
   tags: [sandbox-manager, smart-platform]
   become_user: "{{username}}"
   git: repo="{{hspc_repos_base}}/{{sandbox_manager_project}}"
        version="{{sandbox_manager_branch}}"
        dest="{{install_dir}}/hspc/{{sandbox_manager_project}}"
        update={{update_repositories}}
        force=yes

 - name: configure sandbox-manager-server service
   tags: [sandbox-manager, smart-platform]
   template: src=sandbox-manager-server.service.j2
             dest=/etc/systemd/system/sandbox-manager-server.service
             owner=root group=root mode=0644

 - name: enable sandbox-manager-server service
   tags: [sandbox-manager, smart-platform]
   shell: systemctl enable sandbox-manager-server.service

 - name: reload systemd daemon
   tags: [sandbox-manager, smart-platform]
   shell: systemctl daemon-reload

 - name: stop sandbox-manager-server
   tags: [sandbox-manager, smart-platform]
   service: name=sandbox-manager-server state=stopped

# todo fix privileges
 - name: Configure MySQL user
   tags: [sandbox-manager, smart-platform]
   mysql_user: name={{mysql_user}} host={{mysql_host}} password={{mysql_pass}} priv={{mysql_privilage}} state=present

 - name: Drop the sandbox-manager-server database
   tags: [sandbox-manager, smart-platform]
   mysql_db: name={{sandbox_manager_database}} state=absent

 - name: Create the sandbox-manager-server database
   tags: [sandbox-manager, smart-platform]
   mysql_db: name={{sandbox_manager_database}} state=present

 - name: patch sandbox manager create
   tags: [sandbox-manager, smart-platform]
   become_user: "{{username}}"
   template: src=patches/create-sandman.sql.j2
             dest={{install_dir}}/hspc/sandbox-manager/src/main/resources/db/create-sandman.sql

 - name: patch sandbox manager install
   tags: [sandbox-manager, smart-platform]
   become_user: "{{username}}"
   template: src=patches/initialize-sandman.sql.j2
             dest={{install_dir}}/hspc/sandbox-manager/src/main/resources/db/initialize-sandman.sql

 - name: create the sandbox manager database
   tags: [sandbox-manager, smart-platform]
   mysql_db: name={{sandbox_manager_database}} state=import target="{{install_dir}}/hspc/sandbox-manager/src/main/resources/db/create-sandman.sql"

 - name: initialize the sandbox manager database
   tags: [sandbox-manager, smart-platform]
   mysql_db: name={{sandbox_manager_database}} state=import target="{{install_dir}}/hspc/sandbox-manager/src/main/resources/db/initialize-sandman.sql"

 - name: ensures {{install_dir}}/hspc/sandbox-manager/src/main/webapp/static/js/branding dir exists
   tags: [sandbox-manager, smart-platform]
   file: path={{install_dir}}/hspc/sandbox-manager/src/main/webapp/static/js/branding state=directory

 - name: patch branding
   tags: [sandbox-manager, smart-platform]
   become_user: "{{username}}"
   template: src=patches/branded_text.js.j2
             dest={{install_dir}}/hspc/sandbox-manager/src/main/webapp/static/js/branding/branded_text.js

 - name: ensures {{install_dir}}/hspc/sandbox-manager/src/main/webapp/static/branding/smart/images dir exists
   tags: [sandbox-manager, smart-platform]
   file: path={{install_dir}}/hspc/sandbox-manager/src/main/webapp/static/branding/smart/images state=directory

 - name: config smart-logo.png
   tags: [sandbox-manager, smart-platform]
   copy: src=smart-logo.png dest={{install_dir}}/hspc/sandbox-manager/src/main/webapp/static/branding/smart/images/smart-logo.png

 - name: config smart-logo@2x.png
   tags: [sandbox-manager, smart-platform]
   copy: src=smart-logo@2x.png dest={{install_dir}}/hspc/sandbox-manager/src/main/webapp/static/branding/smart/images/smart-logo@2x.png

 - name: config smart-logo@3x.png
   tags: [sandbox-manager, smart-platform]
   copy: src=smart-logo@3x.png dest={{install_dir}}/hspc/sandbox-manager/src/main/webapp/static/branding/smart/images/smart-logo@3x.png

 - name: build hspc sandbox-manager-server
   tags: [sandbox-manager, smart-platform]
   become_user: "{{username}}"
   shell: chdir={{install_dir}}/hspc
        mvn clean install -e -f sandbox-manager/pom.xml -Ptomcat-embedded

 - name: generate self-signed ssl certificate (sandbox-manager-server)
   tags: [sandbox-manager, smart-platform]
   when: sandbox_manager_server_secure_http and not use_custom_ssl_certificates
   shell: creates=/etc/nginx/ssl/sandbox-manager.crt
          /bin/echo -e "{{sandbox_manager_server_ssl_country}}\n{{sandbox_manager_server_ssl_province}}\n{{sandbox_manager_server_ssl_locality}}\n{{sandbox_manager_server_ssl_organization}}\n{{sandbox_manager_server_ssl_division}}\n{{sandbox_manager_server_host}}\n{{sandbox_manager_server_ssl_email}}\n" | openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/sandbox-manager.key -out /etc/nginx/ssl/sandbox-manager.crt

 - name: import sandbox-manager-server certificate in truststore (sandbox-manager-server)
   tags: [sandbox-manager, smart-platform]
   when: sandbox_manager_server_secure_http
   shell: /bin/echo -e "{{keystore_password}}\nyes\n" | keytool
            -importcert -trustcacerts
            -alias sandbox-manager
            -file /etc/nginx/ssl/sandbox-manager.crt
            -keystore {{install_dir}}/keystore

 - name: configure nginx (sandbox-manager-server)
   tags: [sandbox-manager, smart-platform]
   template: src=nginx_sandbox_manager.j2 dest=/etc/nginx/sites-enabled/sandbox-manager owner=root group=root mode=0644
   notify:
     - restart nginx

 - name: restart sandbox-manager-server
   tags: [sandbox-manager, smart-platform, reset_db]
   service: name=sandbox-manager-server enabled=yes state=restarted

 - name: verify sandbox-manager-server is available
   tags: [verify, auth, sandbox-manager]
   wait_for: host={{sandbox_manager_server_host}} port={{sandbox_manager_server_internal_port}}

 - meta: flush_handlers
