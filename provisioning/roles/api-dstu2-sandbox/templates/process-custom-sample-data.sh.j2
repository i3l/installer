#!/bin/bash

SAMPLE_DATA_ERROR=${ERROR:-1}
SAMPLE_DATA_CONTINUE_ON_ERROR=${CONTINUE_ON_ERROR:-false}
SAMPLE_DATA_CONTINUE_ON_RESOURCE_ERROR=true
SAMPLE_DATA_WORKING_FOLDER="${JOBS_FOLDER:-{{user_jobs_home}}}"
SAMPLE_DATA_OUTPUT_FOLDER="${OUTPUT_FOLDER:-{{user_jobs_output_home}}/$(date '+%d-%b-%Y')}"
SAMPLE_DATA_RESOURCES_FOLDER="{{install_dir}}/api-dstu2-custom-sample-data/fhir-resources"

function SAMPLE_DATA_handleLastError {
  echo $1
  if [ ! $SAMPLE_DATA_CONTINUE_ON_ERROR ]
  then
    exit $SAMPLE_DATA_ERROR
  fi
}

function handleResourceError {
  echo $1
  if [ ! $SAMPLE_DATA_CONTINUE_ON_RESOURCE_ERROR ]
  then
    exit $SAMPLE_DATA_ERROR
  fi
}

cd $SAMPLE_DATA_RESOURCES_FOLDER
cd ..

echo "Gathering custom-sample-data..."
git fetch && git pull

echo "Installing pip requirements..."
pip install -r requirements.txt

if [ $? -ne 0 ]
then
    SAMPLE_DATA_handleLastError "Failed to install requirements.txt"
fi

echo "Validating custom-sample-data..."
python validate.py

if [ $? -ne 0 ]
then
    SAMPLE_DATA_handleLastError "Failed to validate custom-sample-data"
fi

# make sure the output folder exists
mkdir -p $SAMPLE_DATA_OUTPUT_FOLDER

echo "Importing custom-sample-data..."
for FILE in $(find $SAMPLE_DATA_RESOURCES_FOLDER -name *.json -type f -printf "%f\n")
do
    echo -n "Uploading $FILE..."

    HTTP_RESPONSE=$(curl '{{api_dstu2_server_internal_smart_sandbox_open_fhir_root_url}}/?' --silent --write-out "HTTPSTATUS:%{http_code}" -H 'Content-Type: application/json+fhir' --data-binary @$SAMPLE_DATA_RESOURCES_FOLDER/$FILE)

    # handle curl errors
    if [ $? -ne 0 ]
    then
        SAMPLE_DATA_handleLastError "Failed to upload $SAMPLE_DATA_RESOURCES_FOLDER/$FILE"
    fi

    # extract the body
    HTTP_BODY=$(echo $HTTP_RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')

    # remove previous file, if any
    rm -rf $SAMPLE_DATA_OUTPUT_FOLDER/$FILE

    # write the response body
    echo "$HTTP_BODY" | python -m json.tool > "$SAMPLE_DATA_OUTPUT_FOLDER/${FILE%.*}-response.${FILE##*.}"

    # extract the status
    HTTP_STATUS=$(echo $HTTP_RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')

    case $HTTP_STATUS in
    200) echo "200 OK"
         ;;
    201) echo "201 Created"
         ;;
    202) echo "202 Accepted"
         ;;
    203|204|205|206|207|208|226) echo "$HTTP_STATUS"
         ;;
    *) echo "$HTTP_STATUS"
       handleResourceError "Failed to import custom-sample-data at $RESOURCES_FOLDER/$FILE"
       ;;
    esac
done

echo "Importing custom-sample-data complete."
